# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Morales Bot - Operations CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write

jobs:
  gradle-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Start containers
        run: docker-compose -f "docker-compose.yml" up -d --build

      - name: Test with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build test

  gradle-build:
    needs: gradle-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build -x test

      - name: Copy Jar file
        run: mv build/libs/$(ls build/libs) app.jar

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          # Artifact name
          name: jar-file
          # A file, directory or wildcard pattern that describes what to upload
          path: app.jar

  docker-image:
    needs: gradle-build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Docker Build
        uses: docker/setup-buildx-action@v2.0.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: jar-file
          path: app.jar

      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        uses: docker/login-action@v2.0.0
        with:
          # Username used to log against the Docker registry
          username: milezz
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.PASSWORD_DOCKER_HUB }}

      - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
        uses: docker/build-push-action@v3.0.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: .
          # Path to the Dockerfile
          file: ./Dockerfile
          # Push is a shorthand for --output=type=registry
          push: true
          # List of tags
          tags: milezz/konoha:${{github.ref_name}}
          build-args: |
            "PASSWORD_DB=${{ secrets.PASSWORD_DB }}"

  github-release:
    needs: docker-image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      - name: Bump version
        id: bump_version
        uses: paulhatch/semantic-version@v5.0.2
        with:
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE"
          minor_pattern: "feat:"
          version_format: "${major}.${minor}.${patch}"
          change_path: "."
          #namespace: develop
          bump_each_commit: true
          search_commit_body: false
          enable_prerelease_mode: true

      - name: Publish Tag (vX.Y.Z)
        run: |
          echo Version: ${{ steps.bump_version.outputs.version_tag }}
          git tag ${{ steps.bump_version.outputs.version_tag }}
          git push origin ${{ steps.bump_version.outputs.version_tag }}

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bump_version.outputs.version_tag }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}